<?php

namespace MyProject\DAO\Test;

use Exception;
use MyProject\DAO\BaseDAO;
use MySpot\SqlMapConst;

/**
 * Generated by iCopyPaste
 */
class PostDAO extends BaseDAO
{

    /**
     * Execute the query 'test.post.selectIdUserTitleTextCreatedAt'
     *
     * @return \MyProject\DataObject\Test\PostDO[] Data Object
     * @throws \MySpot\SqlMapException
     */
    public function selectIdUserTitleTextCreatedAt()
    {
        $sqlMap = $this->getSqlMap();
        $sqlMapResult = $sqlMap->select('test.post.selectIdUserTitleTextCreatedAt', []);

        return $sqlMapResult->fetchAll();
    }

    /**
     * Execute the query 'test.post.selectIdUserTitleTextCreatedAtByUser'
     *
     * @param string $user
     * @return \MyProject\DataObject\Test\PostDO[] Data Object
     * @throws \MySpot\SqlMapException
     */
    public function selectIdUserTitleTextCreatedAtByUser(?string $user)
    {
        static $requiredParams = ['user'];
        foreach ($requiredParams as $param) {
            if (!isset(${$param})) {
                throw new Exception(sprintf('Param [%s] is missing in %s', $param, __METHOD__));
            }
        }
        $sqlMap = $this->getSqlMap();
        $sqlMapResult = $sqlMap->select('test.post.selectIdUserTitleTextCreatedAtByUser', [
            'user' => [$user, SqlMapConst::PARAM_STR]
        ]);

        return $sqlMapResult->fetchAll();
    }


    /**
     * Execute the query 'test.post.selectIdUserTitleTextCreatedAtByUser'
     *
     * @param string $users
     * @return \MyProject\DataObject\Test\PostDO[] Data Object
     * @throws \MySpot\SqlMapException
     */
    public function selectIdUserTitleTextCreatedAtByUsers(?array $users)
    {
        static $requiredParams = ['users'];
        foreach ($requiredParams as $param) {
            if (!isset(${$param})) {
                throw new Exception(sprintf('Param [%s] is missing in %s', $param, __METHOD__));
            }
        }
        $sqlMap = $this->getSqlMap();
        $sqlMapResult = $sqlMap->select('test.post.selectIdUserTitleTextCreatedAtByUsers', [
            'user' => [$users, SqlMapConst::PARAM_STR]
        ]);

        return $sqlMapResult->fetchAll();
    }
}
